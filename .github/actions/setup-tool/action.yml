name: Setup tools to test obs-studio

runs:
  using: 'composite'

  steps:
    - name: 'Install and setup tools'
      if: ${{ runner.os == 'Linux' }}
      shell: bash
      run: |
        set -e

        (cd obs-studio && sudo cmake --install build)

        apt_packages=(
          apt-transport-https gnupg
          xvfb
          x11-xserver-utils
          ffmpeg
          nginx libnginx-mod-rtmp
          python3-pip
          python3-pil
          python3-tk python3-dev
          python3-tesserocr
          pulseaudio
          vlc
          scrot
          xdotool
          lcov
        )
        sudo apt install -y "${apt_packages[@]}"

        curl -L https://notesalexp.org/debian/alexp_key.asc | sudo apt-key add -
        sudo tee -a /etc/apt/sources.list <<<"deb https://notesalexp.org/tesseract-ocr5/jammy/ jammy main"
        sudo apt update
        sudo apt install -y tesseract-ocr tesseract-ocr-eng

        sudo tee -a /etc/nginx/nginx.conf <<-EOF
        rtmp_auto_push on;
        rtmp {
          server {
            listen 1935;
            chunk_size 4096;
            timeout 10s;
            application live {
              live on;
              allow publish all;
            }
          }
        }
        EOF

        pulseaudio --start

        cat > wrapper.sh <<-EOF
        #! /bin/bash
        timeout 30m xvfb-run "\$@"
        EOF
        chmod +x wrapper.sh

    - name: 'Prepare desktop'
      if: ${{ runner.os == 'macOS' }}
      uses: paulz/prepare-macos@v1

    - name: 'Install and setup tools'
      if: ${{ runner.os == 'macOS' }}
      shell: bash
      run: |
        brew install lcov
        brew install tesseract

        cat > wrapper.sh <<-EOF
        #! /bin/bash
        exec "\$@"
        EOF
        chmod +x wrapper.sh

    - uses: msys2/setup-msys2@v2
      if: ${{ runner.os == 'Windows' }}
      with:
        update: true
        install: >-
          mingw-w64-x86_64-tesseract-ocr
          mingw-w64-x86_64-tesseract-data-eng

    - name: 'Install and setup tools'
      if: ${{ runner.os == 'Windows' }}
      shell: bash
      run: |
        cat > wrapper.sh <<-EOF
        #! /bin/bash
        PATH="$PATH:/d/a/_temp/msys64/mingw64/bin"
        which python3
        exec "\$@"
        EOF
        chmod +x wrapper.sh

    - name: 'Install using PyPI'
      shell: bash
      run: |
        which pip3
        pip3 install -U -r cirun/requirements.txt
        pip3 install -U Pillow

        git clone --depth=1 https://github.com/norihiro/untriseptium.git
        (cd untriseptium && pip3 install -U ./)
